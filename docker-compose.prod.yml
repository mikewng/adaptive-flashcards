version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16
    container_name: flashcards-db
    environment:
      POSTGRES_DB: flashcards
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sqlflashcards123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - flashcards-network
    restart: always

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: flashcards-backend
    expose:
      - "8000"
    environment:
      APP_NAME: smart_flashcards
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://postgres:sqlflashcards123@db:5432/flashcards}
      JWT_ALG: HS256
      JWT_SECRET: ${JWT_SECRET}
      CORS_ORIGINS: ${CORS_ORIGINS:-'["https://${DOMAIN_NAME}", "http://localhost:3000"]'}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - flashcards-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend/flashcards-fe
      dockerfile: Dockerfile
    container_name: flashcards-frontend
    expose:
      - "3000"
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-https://${DOMAIN_NAME}/api}
      NODE_ENV: production
    depends_on:
      - backend
    networks:
      - flashcards-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy with SSL
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: flashcards-nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - frontend
      - backend
    networks:
      - flashcards-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: flashcards-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - flashcards-network

volumes:
  postgres_data:
    driver: local

networks:
  flashcards-network:
    driver: bridge
